{"ast":null,"code":"var _jsxFileName = \"/Users/valentinbayard/Sublimarches/Sublimarches/optimiseur/dessus-marches/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calculator, Plus, Trash2, X, Upload, Scissors, Package, Euro, ArrowLeft, Copy } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TreadOptimizationApp = () => {\n  _s();\n  var _projectData$stairs, _projectData$stairs$s;\n  const [projectData, setProjectData] = useState(null);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [optimizationResults, setOptimizationResults] = useState(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n\n  // Large planks configuration\n  const [largePlanks, setLargePlanks] = useState([{\n    id: 1,\n    width: 900,\n    height: 610,\n    price: 45.98,\n    maxQuantity: null,\n    name: '90x61cm'\n  }, {\n    id: 2,\n    width: 1210,\n    height: 610,\n    price: 60.13,\n    maxQuantity: null,\n    name: '121x61cm'\n  }, {\n    id: 3,\n    width: 1360,\n    height: 610,\n    price: 67.20,\n    maxQuantity: null,\n    name: '136x61cm'\n  }, {\n    id: 4,\n    width: 1810,\n    height: 610,\n    price: 96.69,\n    maxQuantity: null,\n    name: '181x61cm'\n  }]);\n\n  // Saw thickness\n  const [sawThickness, setSawThickness] = useState(10);\n\n  // Extract treads from project data\n  const treads = (projectData === null || projectData === void 0 ? void 0 : (_projectData$stairs = projectData.stairs) === null || _projectData$stairs === void 0 ? void 0 : (_projectData$stairs$s = _projectData$stairs.steps) === null || _projectData$stairs$s === void 0 ? void 0 : _projectData$stairs$s.map(step => ({\n    id: step.stepNumber,\n    width: Math.max(step.maxWidth, step.maxDepth),\n    // Plus grande longueur\n    height: Math.min(step.maxWidth, step.maxDepth),\n    // Plus grande largeur\n    name: `Dessus de marche ${step.stepNumber}`,\n    comment: step.comment\n  }))) || [];\n\n  // Debug: log treads when projectData changes\n  useEffect(() => {\n    if (projectData) {\n      console.log('ProjectData mis à jour:', projectData);\n      console.log('Dessus de marche extraits:', treads);\n    }\n  }, [projectData, treads]);\n\n  // Handle file upload\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        try {\n          var _data$metadata;\n          const data = JSON.parse(e.target.result);\n          console.log('Fichier importé:', data);\n\n          // Check if it's a valid stair measurement file\n          const isValidType = data.type === 'stair-measurement' || ((_data$metadata = data.metadata) === null || _data$metadata === void 0 ? void 0 : _data$metadata.type) === 'stair-measurement';\n          const hasStairs = data.stairs && data.stairs.steps && Array.isArray(data.stairs.steps);\n          if (isValidType && hasStairs) {\n            console.log('Contremarches trouvées:', data.stairs.steps.length);\n            setProjectData(data);\n            setShowUploadModal(false);\n          } else {\n            console.error('Structure de fichier invalide:', data);\n            alert('Fichier invalide. Veuillez utiliser un fichier exporté depuis l\\'étape 1.\\n\\nStructure attendue: fichier JSON avec type=\"stair-measurement\" et données des marches.');\n          }\n        } catch (error) {\n          console.error('Erreur de parsing JSON:', error);\n          alert('Erreur lors de la lecture du fichier JSON: ' + error.message);\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  // Add new plank\n  const addNewPlank = () => {\n    const newId = Math.max(...largePlanks.map(p => p.id), 0) + 1;\n    setLargePlanks(prev => [...prev, {\n      id: newId,\n      width: 1000,\n      height: 610,\n      price: 0.00,\n      maxQuantity: null,\n      name: '100x61cm'\n    }]);\n  };\n\n  // Delete plank\n  const deletePlank = id => {\n    setLargePlanks(prev => prev.filter(p => p.id !== id));\n  };\n\n  // Update plank\n  const updatePlank = (id, field, value) => {\n    setLargePlanks(prev => prev.map(plank => plank.id === id ? {\n      ...plank,\n      [field]: value\n    } : plank));\n  };\n\n  // Generate plank name\n  const generatePlankName = (width, height) => {\n    return `${Math.round(width / 10)}x${Math.round(height / 10)}cm`;\n  };\n\n  // Optimization algorithm\n  const optimizeCutting = () => {\n    if (treads.length === 0) {\n      alert('Aucun dessus de marche à optimiser !');\n      return;\n    }\n    setIsCalculating(true);\n\n    // Simulate calculation time\n    setTimeout(() => {\n      const solution = calculateOptimalCutting(treads, sawThickness);\n      setOptimizationResults(solution);\n      setIsCalculating(false);\n    }, 1500);\n  };\n\n  // Calculate optimal cutting arrangement\n  const calculateOptimalCutting = (pieces, sawThickness) => {\n    const solution = [];\n    let remainingPieces = pieces.map((piece, index) => ({\n      ...piece,\n      instanceId: `piece-${piece.id}`,\n      name: `${piece.id}`,\n      originalIndex: index\n    }));\n    const plankUsage = {};\n    largePlanks.forEach(plank => {\n      plankUsage[plank.id] = 0;\n    });\n    let totalCost = 0;\n    let totalPlanks = 0;\n    while (remainingPieces.length > 0) {\n      let bestOption = null;\n      let bestEfficiency = 0;\n\n      // Test each plank type\n      for (const plankType of largePlanks) {\n        if (plankType.maxQuantity && plankUsage[plankType.id] >= plankType.maxQuantity) {\n          continue;\n        }\n        const arrangement = calculateBestArrangement(remainingPieces, plankType, sawThickness);\n        const costPerArea = plankType.price / (plankType.width * plankType.height);\n        const efficiency = arrangement.efficiency / costPerArea;\n        if (efficiency > bestEfficiency && arrangement.pieces.length > 0) {\n          bestEfficiency = efficiency;\n          bestOption = {\n            plankType,\n            arrangement,\n            costPerArea\n          };\n        }\n      }\n      if (bestOption) {\n        solution.push(bestOption);\n        plankUsage[bestOption.plankType.id]++;\n        totalCost += bestOption.plankType.price;\n        totalPlanks++;\n\n        // Remove used pieces\n        remainingPieces = remainingPieces.filter(piece => !bestOption.arrangement.pieces.some(used => used.instanceId === piece.instanceId));\n      } else {\n        // If no piece can be placed, try with available planks\n        const piece = remainingPieces[0];\n        const availablePlanks = largePlanks.filter(plank => !plank.maxQuantity || plankUsage[plank.id] < plank.maxQuantity);\n        const suitablePlank = availablePlanks.find(plank => {\n          const fitNormal = piece.width <= plank.width && piece.height <= plank.height;\n          const fitRotated = piece.height <= plank.width && piece.width <= plank.height;\n          return fitNormal || fitRotated;\n        });\n        if (suitablePlank) {\n          const rotated = !(piece.width <= suitablePlank.width && piece.height <= suitablePlank.height);\n          solution.push({\n            plankType: suitablePlank,\n            arrangement: {\n              pieces: [{\n                ...piece,\n                rotated,\n                x: 0,\n                y: 0,\n                displayWidth: rotated ? piece.height : piece.width,\n                displayHeight: rotated ? piece.width : piece.height\n              }],\n              efficiency: piece.width * piece.height / (suitablePlank.width * suitablePlank.height)\n            }\n          });\n          plankUsage[suitablePlank.id]++;\n          totalCost += suitablePlank.price;\n          totalPlanks++;\n          remainingPieces.shift();\n        } else {\n          break;\n        }\n      }\n    }\n    return {\n      solution,\n      totalCost,\n      totalPlanks,\n      remainingPieces,\n      efficiency: solution.reduce((sum, item) => sum + item.arrangement.efficiency, 0) / solution.length\n    };\n  };\n\n  // Calculate best arrangement for a plank\n  const calculateBestArrangement = (pieces, plankType, sawThickness) => {\n    const arrangements = [];\n\n    // Try different piece combinations\n    for (let i = 1; i <= Math.min(pieces.length, 10); i++) {\n      const combinations = getCombinations(pieces, i);\n      for (const combination of combinations) {\n        const arrangement = placePieces(combination, plankType, sawThickness);\n        if (arrangement.pieces.length > 0) {\n          const totalArea = arrangement.pieces.reduce((sum, piece) => sum + piece.width * piece.height, 0);\n          arrangement.totalValue = totalArea;\n          arrangement.efficiency = totalArea / (plankType.width * plankType.height);\n          arrangements.push(arrangement);\n        }\n      }\n    }\n    return arrangements.reduce((best, current) => current.totalValue > best.totalValue ? current : best, {\n      pieces: [],\n      totalValue: 0,\n      efficiency: 0\n    });\n  };\n\n  // Get combinations of pieces\n  const getCombinations = (pieces, size) => {\n    if (size === 1) return pieces.map(p => [p]);\n    if (size === pieces.length) return [pieces];\n    const combinations = [];\n    for (let i = 0; i <= pieces.length - size; i++) {\n      const head = pieces[i];\n      const tailCombinations = getCombinations(pieces.slice(i + 1), size - 1);\n      for (const tail of tailCombinations) {\n        combinations.push([head, ...tail]);\n      }\n    }\n    return combinations;\n  };\n\n  // Place pieces on a plank\n  const placePieces = (pieces, plankType, sawThickness) => {\n    const placedPieces = [];\n    for (const piece of pieces) {\n      const position = findBestPosition(piece, placedPieces, plankType, sawThickness);\n      if (position) {\n        const rotated = position.rotated;\n        placedPieces.push({\n          ...piece,\n          x: position.x,\n          y: position.y,\n          rotated,\n          displayWidth: rotated ? piece.height : piece.width,\n          displayHeight: rotated ? piece.width : piece.height\n        });\n      }\n    }\n    return {\n      pieces: placedPieces\n    };\n  };\n\n  // Find best position for a piece\n  const findBestPosition = (piece, placedPieces, plankType, sawThickness) => {\n    const positions = [];\n\n    // Try normal orientation\n    if (piece.width <= plankType.width && piece.height <= plankType.height) {\n      positions.push({\n        x: 0,\n        y: 0,\n        rotated: false\n      });\n    }\n\n    // Try rotated orientation\n    if (piece.height <= plankType.width && piece.width <= plankType.height) {\n      positions.push({\n        x: 0,\n        y: 0,\n        rotated: true\n      });\n    }\n\n    // Add positions near existing pieces\n    for (const existing of placedPieces) {\n      const rightPos = {\n        x: existing.x + existing.displayWidth + sawThickness,\n        y: existing.y,\n        rotated: false\n      };\n      const bottomPos = {\n        x: existing.x,\n        y: existing.y + existing.displayHeight + sawThickness,\n        rotated: false\n      };\n      positions.push(rightPos, bottomPos);\n    }\n\n    // Sort positions by x then y\n    positions.sort((a, b) => a.x - b.x || a.y - b.y);\n\n    // Test each position\n    for (const pos of positions) {\n      if (canPlaceAt(piece, pos, placedPieces, plankType, sawThickness)) {\n        return pos;\n      }\n    }\n    return null;\n  };\n\n  // Check if piece can be placed at position\n  const canPlaceAt = (piece, position, placedPieces, plankType, sawThickness) => {\n    const width = position.rotated ? piece.height : piece.width;\n    const height = position.rotated ? piece.width : piece.height;\n\n    // Check plank boundaries\n    if (position.x + width > plankType.width || position.y + height > plankType.height) {\n      return false;\n    }\n\n    // Check collisions with existing pieces\n    for (const existing of placedPieces) {\n      if (!(position.x >= existing.x + existing.displayWidth + sawThickness || position.x + width + sawThickness <= existing.x || position.y >= existing.y + existing.displayHeight + sawThickness || position.y + height + sawThickness <= existing.y)) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // Generate plank summary\n  const generatePlankSummary = solution => {\n    const summary = {};\n    solution.solution.forEach(item => {\n      const plankName = generatePlankName(item.plankType.width, item.plankType.height);\n      if (!summary[plankName]) {\n        summary[plankName] = {\n          count: 0,\n          price: item.plankType.price,\n          dimensions: `${item.plankType.width}×${item.plankType.height}mm`\n        };\n      }\n      summary[plankName].count++;\n    });\n    return Object.entries(summary).map(([name, data]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center p-2 bg-white rounded border\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-medium\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-600 ml-2\",\n          children: [\"(\", data.dimensions, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-semibold text-blue-600\",\n          children: [data.count, \" planche\", data.count > 1 ? 's' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: [data.count, \" \\xD7 \", data.price, \"\\u20AC = \", (data.count * data.price).toFixed(2), \"\\u20AC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this));\n  };\n\n  // Generate shopping list as text table\n  const generateShoppingListText = solution => {\n    const summary = {};\n    solution.solution.forEach(item => {\n      const plankName = generatePlankName(item.plankType.width, item.plankType.height);\n      if (!summary[plankName]) {\n        summary[plankName] = {\n          count: 0,\n          price: item.plankType.price,\n          dimensions: `${item.plankType.width}×${item.plankType.height}mm`\n        };\n      }\n      summary[plankName].count++;\n    });\n    let tableText = \"Grande planche\\tQuantité\\tPU\\tPrix total\\n\";\n    tableText += \"-\\t-\\t-\\t-\\n\";\n    let totalCost = 0;\n    Object.entries(summary).forEach(([name, data]) => {\n      const lineTotal = data.count * data.price;\n      totalCost += lineTotal;\n      tableText += `${name}\\t${data.count}\\t${data.price}€\\t${lineTotal.toFixed(2)}€\\n`;\n    });\n    tableText += \"-\\t-\\t-\\t-\\n\";\n    tableText += `Total\\t\\t\\t${totalCost.toFixed(2)}€\\n`;\n    return tableText;\n  };\n\n  // Copy shopping list to clipboard\n  const copyShoppingListToClipboard = () => {\n    if (!optimizationResults) return;\n    const tableText = generateShoppingListText(optimizationResults);\n    navigator.clipboard.writeText(tableText).then(() => {\n      // Show a temporary success message\n      const button = document.getElementById('copy-shopping-list-btn');\n      if (button) {\n        const originalText = button.innerHTML;\n        button.innerHTML = '<Copy className=\"w-4 h-4\" /> Copié !';\n        button.className = 'px-3 py-1 bg-green-600 text-white rounded text-sm hover:bg-green-700 flex items-center gap-1';\n        setTimeout(() => {\n          button.innerHTML = originalText;\n          button.className = 'px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700 flex items-center gap-1';\n        }, 2000);\n      }\n    }).catch(err => {\n      console.error('Erreur lors de la copie:', err);\n      alert('Erreur lors de la copie vers le presse-papiers');\n    });\n  };\n\n  // Generate plank visualization\n  const generatePlankVisualization = (item, index) => {\n    const plankType = item.plankType;\n    const arrangement = item.arrangement;\n\n    // Calculate scale to maintain real proportions\n    const maxDisplayWidth = 400;\n    const maxDisplayHeight = 200;\n    const scaleX = maxDisplayWidth / plankType.width;\n    const scaleY = maxDisplayHeight / plankType.height;\n    const scale = Math.min(scaleX, scaleY);\n    const displayWidth = plankType.width * scale;\n    const displayHeight = plankType.height * scale;\n    const colors = ['bg-blue-300', 'bg-green-300', 'bg-red-300', 'bg-purple-300', 'bg-yellow-300', 'bg-pink-300', 'bg-indigo-300', 'bg-orange-300'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-gray-300 p-4 bg-amber-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-semibold mb-2\",\n        children: [generatePlankName(plankType.width, plankType.height), \" - \", plankType.price, \"\\u20AC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative border-2 border-amber-800 bg-amber-100\",\n          style: {\n            width: displayWidth,\n            height: displayHeight\n          },\n          children: arrangement.pieces.map((piece, pieceIndex) => {\n            const color = colors[piece.originalIndex % colors.length];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `absolute border border-gray-700 ${color} flex items-center justify-center text-xs font-bold shadow-sm`,\n              style: {\n                width: piece.displayWidth * scale,\n                height: piece.displayHeight * scale,\n                left: piece.x * scale,\n                top: piece.y * scale\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center leading-tight\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"font-bold\",\n                  children: piece.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs\",\n                  children: [piece.width, \"\\xD7\", piece.height]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 21\n                }, this), piece.rotated && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xs\",\n                  children: \"\\u21BB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this)\n            }, pieceIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 text-sm text-gray-600 text-center\",\n        children: [\"Pi\\xE8ces: \", arrangement.pieces.length, \" | Efficacit\\xE9: \", (arrangement.efficiency * 100).toFixed(1), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-1 text-xs text-gray-500 text-center\",\n        children: [\"Dimensions: \", plankType.width, \"\\xD7\", plankType.height, \"mm | \\xC9chelle: 1:\", Math.round(1 / scale)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mx-auto p-6 bg-white min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-4 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/Sublimarches/optimiseur/contremarches/\",\n          className: \"flex items-center gap-2 text-blue-600 hover:text-blue-800 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n            className: \"w-4 h-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), \"Retour \\xE0 l'\\xE9tape 2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-800 mb-2 flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Scissors, {\n          className: \"text-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), \"Optimisation des Dessus de Marche\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"\\xC9tape 3/3 : Optimisez la d\\xE9coupe des dessus de marche sur les grandes planches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this), !projectData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-50 p-6 rounded-lg mb-6 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold text-blue-800 mb-4 flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Upload, {\n          className: \"w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this), \"Importer les mesures de l'\\xE9tape 1\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-4\",\n        children: \"Uploadez le fichier JSON export\\xE9 depuis l'\\xE9tape 1 pour commencer l'optimisation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowUploadModal(true),\n        className: \"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2 mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Upload, {\n          className: \"w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this), \"Choisir un fichier JSON\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 9\n    }, this), projectData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-green-50 p-4 rounded-lg mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold text-green-800 mb-3 flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Package, {\n          className: \"w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this), \"Projet : \", projectData.project.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-green-600\",\n            children: treads.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Dessus de marche\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-blue-600\",\n            children: (treads.reduce((sum, t) => sum + t.width * t.height, 0) / 1000000).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600\",\n            children: \"m\\xB2 total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-purple-600\",\n            children: Math.max(...treads.map(t => t.width))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Longueur max (mm)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold text-orange-600\",\n            children: Math.max(...treads.map(t => t.height))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600\",\n            children: \"Largeur max (mm)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 9\n    }, this), projectData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 gap-6 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-50 p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-gray-800 mb-3\",\n          children: \"Param\\xE8tres g\\xE9n\\xE9raux\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700 mb-1\",\n              children: \"Largeur de scie (mm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: sawThickness,\n              onChange: e => setSawThickness(parseInt(e.target.value) || 10),\n              min: \"0\",\n              max: \"50\",\n              className: \"w-full p-2 border border-gray-300 rounded-md\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-50 p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-blue-800 flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Package, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 17\n            }, this), \"Grandes planches disponibles\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addNewPlank,\n            className: \"px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700 flex items-center gap-1\",\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 17\n            }, this), \"Ajouter\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: largePlanks.map(plank => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 bg-white rounded border\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 md:grid-cols-4 gap-2 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-xs font-medium text-gray-700 mb-1\",\n                  children: \"Largeur (mm)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: plank.width,\n                  onChange: e => updatePlank(plank.id, 'width', parseInt(e.target.value) || 0),\n                  className: \"w-full p-1 text-sm border border-gray-300 rounded\",\n                  min: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 604,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-xs font-medium text-gray-700 mb-1\",\n                  children: \"Hauteur (mm)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: plank.height,\n                  onChange: e => updatePlank(plank.id, 'height', parseInt(e.target.value) || 0),\n                  className: \"w-full p-1 text-sm border border-gray-300 rounded\",\n                  min: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-xs font-medium text-gray-700 mb-1\",\n                  children: \"Prix (\\u20AC)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: plank.price,\n                  onChange: e => updatePlank(plank.id, 'price', parseFloat(e.target.value) || 0),\n                  className: \"w-full p-1 text-sm border border-gray-300 rounded\",\n                  min: \"0\",\n                  step: \"0.01\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-xs font-medium text-gray-700 mb-1\",\n                  children: \"Quantit\\xE9 max\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: plank.maxQuantity || '',\n                  onChange: e => updatePlank(plank.id, 'maxQuantity', e.target.value ? parseInt(e.target.value) : null),\n                  className: \"w-full p-1 text-sm border border-gray-300 rounded\",\n                  min: \"1\",\n                  placeholder: \"Illimit\\xE9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: [generatePlankName(plank.width, plank.height), \" - \", plank.price, \"\\u20AC\", plank.maxQuantity ? ` (max: ${plank.maxQuantity})` : ' (illimité)']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deletePlank(plank.id),\n                className: \"p-1 text-red-600 hover:bg-red-100 rounded\",\n                title: \"Supprimer cette planche\",\n                children: /*#__PURE__*/_jsxDEV(Trash2, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 19\n            }, this)]\n          }, plank.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 9\n    }, this), projectData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: optimizeCutting,\n        disabled: isCalculating || treads.length === 0,\n        className: \"px-8 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2 mx-auto text-lg font-semibold\",\n        children: isCalculating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"animate-spin rounded-full h-5 w-5 border-b-2 border-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 17\n          }, this), \"Calcul en cours...\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Calculator, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 17\n          }, this), \"Calculer l'optimisation\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 9\n    }, this), optimizationResults && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-100 p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-green-800 mb-2 flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Euro, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 15\n          }, this), \"R\\xE9sultat de l'optimisation\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl font-bold text-green-600\",\n              children: [optimizationResults.totalCost.toFixed(2), \"\\u20AC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Co\\xFBt total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl font-bold text-blue-600\",\n              children: optimizationResults.totalPlanks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Grandes planches\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl font-bold text-purple-600\",\n              children: treads.length - optimizationResults.remainingPieces.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600\",\n              children: \"Dessus de marche plac\\xE9s\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blue-50 p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold text-blue-800 flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Package, {\n              className: \"w-5 h-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 17\n            }, this), \"R\\xE9capitulatif des planches \\xE0 commander\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"copy-shopping-list-btn\",\n            onClick: copyShoppingListToClipboard,\n            className: \"px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700 flex items-center gap-1\",\n            title: \"Copier la liste d'achat au format tableau\",\n            children: [/*#__PURE__*/_jsxDEV(Copy, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 17\n            }, this), \"Copier liste\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: [generatePlankSummary(optimizationResults), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-t pt-2 mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center font-bold text-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total \\xE0 commander :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 738,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-blue-600\",\n                children: [optimizationResults.totalCost.toFixed(2), \"\\u20AC\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-gray-800 mb-4\",\n          children: \"Plan de d\\xE9coupe d\\xE9taill\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: optimizationResults.solution.map((item, index) => generatePlankVisualization(item, index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 11\n      }, this), optimizationResults.remainingPieces.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-50 p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-red-800 mb-2\",\n          children: [\"Dessus de marche non plac\\xE9s (\", optimizationResults.remainingPieces.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-red-600\",\n          children: optimizationResults.remainingPieces.map(p => p.name).join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 9\n    }, this), showUploadModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg max-w-md w-full mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-4 text-blue-800\",\n          children: \"Importer les mesures\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700 mb-2\",\n            children: \"Fichier JSON de l'\\xE9tape 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".json\",\n            onChange: handleFileUpload,\n            className: \"w-full p-2 border border-gray-300 rounded-md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowUploadModal(false),\n            className: \"px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-md flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(X, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 17\n            }, this), \"Annuler\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 bg-blue-50 p-4 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-semibold text-blue-800 mb-2\",\n        children: \"\\uD83D\\uDCCB Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-blue-700 space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"1.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 802,\n            columnNumber: 14\n          }, this), \" Importez le fichier JSON export\\xE9 depuis l'\\xE9tape 1\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"2.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 14\n          }, this), \" Ajustez les param\\xE8tres de scie et les grandes planches disponibles\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"3.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 14\n          }, this), \" Lancez l'optimisation pour obtenir le plan de d\\xE9coupe optimal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 14\n          }, this), \" Visualisez les r\\xE9sultats et le co\\xFBt total\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 text-xs text-blue-600\",\n        children: \"L'algorithme optimise pour le co\\xFBt total en tenant compte de l'efficacit\\xE9 de d\\xE9coupe et des prix des planches. Chaque dessus de marche utilise la plus grande longueur et largeur de la marche.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 485,\n    columnNumber: 5\n  }, this);\n};\n_s(TreadOptimizationApp, \"8Li4CIYrSzPQWhZLBNP0yXIgd5c=\");\n_c = TreadOptimizationApp;\nexport default TreadOptimizationApp;\nvar _c;\n$RefreshReg$(_c, \"TreadOptimizationApp\");","map":{"version":3,"names":["React","useState","useEffect","Calculator","Plus","Trash2","X","Upload","Scissors","Package","Euro","ArrowLeft","Copy","jsxDEV","_jsxDEV","Fragment","_Fragment","TreadOptimizationApp","_s","_projectData$stairs","_projectData$stairs$s","projectData","setProjectData","showUploadModal","setShowUploadModal","optimizationResults","setOptimizationResults","isCalculating","setIsCalculating","largePlanks","setLargePlanks","id","width","height","price","maxQuantity","name","sawThickness","setSawThickness","treads","stairs","steps","map","step","stepNumber","Math","max","maxWidth","maxDepth","min","comment","console","log","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","_data$metadata","data","JSON","parse","result","isValidType","type","metadata","hasStairs","Array","isArray","length","error","alert","message","readAsText","addNewPlank","newId","p","prev","deletePlank","filter","updatePlank","field","value","plank","generatePlankName","round","optimizeCutting","setTimeout","solution","calculateOptimalCutting","pieces","remainingPieces","piece","index","instanceId","originalIndex","plankUsage","forEach","totalCost","totalPlanks","bestOption","bestEfficiency","plankType","arrangement","calculateBestArrangement","costPerArea","efficiency","push","some","used","availablePlanks","suitablePlank","find","fitNormal","fitRotated","rotated","x","y","displayWidth","displayHeight","shift","reduce","sum","item","arrangements","i","combinations","getCombinations","combination","placePieces","totalArea","totalValue","best","current","size","head","tailCombinations","slice","tail","placedPieces","position","findBestPosition","positions","existing","rightPos","bottomPos","sort","a","b","pos","canPlaceAt","generatePlankSummary","summary","plankName","count","dimensions","Object","entries","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","generateShoppingListText","tableText","lineTotal","copyShoppingListToClipboard","navigator","clipboard","writeText","then","button","document","getElementById","originalText","innerHTML","catch","err","generatePlankVisualization","maxDisplayWidth","maxDisplayHeight","scaleX","scaleY","scale","colors","style","pieceIndex","color","left","top","href","onClick","project","t","onChange","parseInt","parseFloat","placeholder","title","disabled","join","accept","_c","$RefreshReg$"],"sources":["/Users/valentinbayard/Sublimarches/Sublimarches/optimiseur/dessus-marches/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Calculator, Plus, Trash2, X, Upload, Scissors, Package, Euro, ArrowLeft, Copy } from 'lucide-react';\n\nconst TreadOptimizationApp = () => {\n  const [projectData, setProjectData] = useState(null);\n  const [showUploadModal, setShowUploadModal] = useState(false);\n  const [optimizationResults, setOptimizationResults] = useState(null);\n  const [isCalculating, setIsCalculating] = useState(false);\n  \n  // Large planks configuration\n  const [largePlanks, setLargePlanks] = useState([\n    { id: 1, width: 900, height: 610, price: 45.98, maxQuantity: null, name: '90x61cm' },\n    { id: 2, width: 1210, height: 610, price: 60.13, maxQuantity: null, name: '121x61cm' },\n    { id: 3, width: 1360, height: 610, price: 67.20, maxQuantity: null, name: '136x61cm' },\n    { id: 4, width: 1810, height: 610, price: 96.69, maxQuantity: null, name: '181x61cm' }\n  ]);\n\n  // Saw thickness\n  const [sawThickness, setSawThickness] = useState(10);\n\n  // Extract treads from project data\n  const treads = projectData?.stairs?.steps?.map(step => ({\n    id: step.stepNumber,\n    width: Math.max(step.maxWidth, step.maxDepth), // Plus grande longueur\n    height: Math.min(step.maxWidth, step.maxDepth), // Plus grande largeur\n    name: `Dessus de marche ${step.stepNumber}`,\n    comment: step.comment\n  })) || [];\n  \n  // Debug: log treads when projectData changes\n  useEffect(() => {\n    if (projectData) {\n      console.log('ProjectData mis à jour:', projectData);\n      console.log('Dessus de marche extraits:', treads);\n    }\n  }, [projectData, treads]);\n\n  // Handle file upload\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const data = JSON.parse(e.target.result);\n          console.log('Fichier importé:', data);\n          \n          // Check if it's a valid stair measurement file\n          const isValidType = (data.type === 'stair-measurement' || data.metadata?.type === 'stair-measurement');\n          const hasStairs = data.stairs && data.stairs.steps && Array.isArray(data.stairs.steps);\n          \n          if (isValidType && hasStairs) {\n            console.log('Contremarches trouvées:', data.stairs.steps.length);\n            setProjectData(data);\n            setShowUploadModal(false);\n          } else {\n            console.error('Structure de fichier invalide:', data);\n            alert('Fichier invalide. Veuillez utiliser un fichier exporté depuis l\\'étape 1.\\n\\nStructure attendue: fichier JSON avec type=\"stair-measurement\" et données des marches.');\n          }\n        } catch (error) {\n          console.error('Erreur de parsing JSON:', error);\n          alert('Erreur lors de la lecture du fichier JSON: ' + error.message);\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  // Add new plank\n  const addNewPlank = () => {\n    const newId = Math.max(...largePlanks.map(p => p.id), 0) + 1;\n    setLargePlanks(prev => [...prev, {\n      id: newId,\n      width: 1000,\n      height: 610,\n      price: 0.00,\n      maxQuantity: null,\n      name: '100x61cm'\n    }]);\n  };\n\n  // Delete plank\n  const deletePlank = (id) => {\n    setLargePlanks(prev => prev.filter(p => p.id !== id));\n  };\n\n  // Update plank\n  const updatePlank = (id, field, value) => {\n    setLargePlanks(prev => prev.map(plank => \n      plank.id === id ? { ...plank, [field]: value } : plank\n    ));\n  };\n\n  // Generate plank name\n  const generatePlankName = (width, height) => {\n    return `${Math.round(width/10)}x${Math.round(height/10)}cm`;\n  };\n\n  // Optimization algorithm\n  const optimizeCutting = () => {\n    if (treads.length === 0) {\n      alert('Aucun dessus de marche à optimiser !');\n      return;\n    }\n\n    setIsCalculating(true);\n\n    // Simulate calculation time\n    setTimeout(() => {\n      const solution = calculateOptimalCutting(treads, sawThickness);\n      setOptimizationResults(solution);\n      setIsCalculating(false);\n    }, 1500);\n  };\n\n  // Calculate optimal cutting arrangement\n  const calculateOptimalCutting = (pieces, sawThickness) => {\n    const solution = [];\n    let remainingPieces = pieces.map((piece, index) => ({\n      ...piece,\n      instanceId: `piece-${piece.id}`,\n      name: `${piece.id}`,\n      originalIndex: index\n    }));\n    \n    const plankUsage = {};\n    largePlanks.forEach(plank => {\n      plankUsage[plank.id] = 0;\n    });\n\n    let totalCost = 0;\n    let totalPlanks = 0;\n\n    while (remainingPieces.length > 0) {\n      let bestOption = null;\n      let bestEfficiency = 0;\n      \n      // Test each plank type\n      for (const plankType of largePlanks) {\n        if (plankType.maxQuantity && plankUsage[plankType.id] >= plankType.maxQuantity) {\n          continue;\n        }\n        \n        const arrangement = calculateBestArrangement(remainingPieces, plankType, sawThickness);\n        const costPerArea = plankType.price / (plankType.width * plankType.height);\n        const efficiency = arrangement.efficiency / costPerArea;\n        \n        if (efficiency > bestEfficiency && arrangement.pieces.length > 0) {\n          bestEfficiency = efficiency;\n          bestOption = {\n            plankType,\n            arrangement,\n            costPerArea\n          };\n        }\n      }\n      \n      if (bestOption) {\n        solution.push(bestOption);\n        plankUsage[bestOption.plankType.id]++;\n        totalCost += bestOption.plankType.price;\n        totalPlanks++;\n        \n        // Remove used pieces\n        remainingPieces = remainingPieces.filter(piece => \n          !bestOption.arrangement.pieces.some(used => used.instanceId === piece.instanceId)\n        );\n      } else {\n        // If no piece can be placed, try with available planks\n        const piece = remainingPieces[0];\n        const availablePlanks = largePlanks.filter(plank => \n          !plank.maxQuantity || plankUsage[plank.id] < plank.maxQuantity\n        );\n        \n        const suitablePlank = availablePlanks.find(plank => {\n          const fitNormal = piece.width <= plank.width && piece.height <= plank.height;\n          const fitRotated = piece.height <= plank.width && piece.width <= plank.height;\n          return fitNormal || fitRotated;\n        });\n        \n        if (suitablePlank) {\n          const rotated = !(piece.width <= suitablePlank.width && piece.height <= suitablePlank.height);\n          solution.push({\n            plankType: suitablePlank,\n            arrangement: { \n              pieces: [{\n                ...piece,\n                rotated,\n                x: 0,\n                y: 0,\n                displayWidth: rotated ? piece.height : piece.width,\n                displayHeight: rotated ? piece.width : piece.height\n              }],\n              efficiency: (piece.width * piece.height) / (suitablePlank.width * suitablePlank.height)\n            }\n          });\n          plankUsage[suitablePlank.id]++;\n          totalCost += suitablePlank.price;\n          totalPlanks++;\n          remainingPieces.shift();\n        } else {\n          break;\n        }\n      }\n    }\n\n    return {\n      solution,\n      totalCost,\n      totalPlanks,\n      remainingPieces,\n      efficiency: solution.reduce((sum, item) => sum + item.arrangement.efficiency, 0) / solution.length\n    };\n  };\n\n  // Calculate best arrangement for a plank\n  const calculateBestArrangement = (pieces, plankType, sawThickness) => {\n    const arrangements = [];\n    \n    // Try different piece combinations\n    for (let i = 1; i <= Math.min(pieces.length, 10); i++) {\n      const combinations = getCombinations(pieces, i);\n      \n      for (const combination of combinations) {\n        const arrangement = placePieces(combination, plankType, sawThickness);\n        if (arrangement.pieces.length > 0) {\n          const totalArea = arrangement.pieces.reduce((sum, piece) => \n            sum + (piece.width * piece.height), 0\n          );\n          arrangement.totalValue = totalArea;\n          arrangement.efficiency = totalArea / (plankType.width * plankType.height);\n          arrangements.push(arrangement);\n        }\n      }\n    }\n    \n    return arrangements.reduce((best, current) => \n      current.totalValue > best.totalValue ? current : best\n    , { pieces: [], totalValue: 0, efficiency: 0 });\n  };\n\n  // Get combinations of pieces\n  const getCombinations = (pieces, size) => {\n    if (size === 1) return pieces.map(p => [p]);\n    if (size === pieces.length) return [pieces];\n    \n    const combinations = [];\n    for (let i = 0; i <= pieces.length - size; i++) {\n      const head = pieces[i];\n      const tailCombinations = getCombinations(pieces.slice(i + 1), size - 1);\n      for (const tail of tailCombinations) {\n        combinations.push([head, ...tail]);\n      }\n    }\n    return combinations;\n  };\n\n  // Place pieces on a plank\n  const placePieces = (pieces, plankType, sawThickness) => {\n    const placedPieces = [];\n    \n    for (const piece of pieces) {\n      const position = findBestPosition(piece, placedPieces, plankType, sawThickness);\n      if (position) {\n        const rotated = position.rotated;\n        placedPieces.push({\n          ...piece,\n          x: position.x,\n          y: position.y,\n          rotated,\n          displayWidth: rotated ? piece.height : piece.width,\n          displayHeight: rotated ? piece.width : piece.height\n        });\n      }\n    }\n    \n    return { pieces: placedPieces };\n  };\n\n  // Find best position for a piece\n  const findBestPosition = (piece, placedPieces, plankType, sawThickness) => {\n    const positions = [];\n    \n    // Try normal orientation\n    if (piece.width <= plankType.width && piece.height <= plankType.height) {\n      positions.push({ x: 0, y: 0, rotated: false });\n    }\n    \n    // Try rotated orientation\n    if (piece.height <= plankType.width && piece.width <= plankType.height) {\n      positions.push({ x: 0, y: 0, rotated: true });\n    }\n    \n    // Add positions near existing pieces\n    for (const existing of placedPieces) {\n      const rightPos = { x: existing.x + existing.displayWidth + sawThickness, y: existing.y, rotated: false };\n      const bottomPos = { x: existing.x, y: existing.y + existing.displayHeight + sawThickness, rotated: false };\n      positions.push(rightPos, bottomPos);\n    }\n    \n    // Sort positions by x then y\n    positions.sort((a, b) => a.x - b.x || a.y - b.y);\n    \n    // Test each position\n    for (const pos of positions) {\n      if (canPlaceAt(piece, pos, placedPieces, plankType, sawThickness)) {\n        return pos;\n      }\n    }\n    \n    return null;\n  };\n\n  // Check if piece can be placed at position\n  const canPlaceAt = (piece, position, placedPieces, plankType, sawThickness) => {\n    const width = position.rotated ? piece.height : piece.width;\n    const height = position.rotated ? piece.width : piece.height;\n    \n    // Check plank boundaries\n    if (position.x + width > plankType.width || position.y + height > plankType.height) {\n      return false;\n    }\n    \n    // Check collisions with existing pieces\n    for (const existing of placedPieces) {\n      if (!(position.x >= existing.x + existing.displayWidth + sawThickness ||\n            position.x + width + sawThickness <= existing.x ||\n            position.y >= existing.y + existing.displayHeight + sawThickness ||\n            position.y + height + sawThickness <= existing.y)) {\n        return false;\n      }\n    }\n    \n    return true;\n  };\n\n  // Generate plank summary\n  const generatePlankSummary = (solution) => {\n    const summary = {};\n    solution.solution.forEach(item => {\n      const plankName = generatePlankName(item.plankType.width, item.plankType.height);\n      if (!summary[plankName]) {\n        summary[plankName] = { \n          count: 0, \n          price: item.plankType.price, \n          dimensions: `${item.plankType.width}×${item.plankType.height}mm` \n        };\n      }\n      summary[plankName].count++;\n    });\n\n    return Object.entries(summary).map(([name, data]) => (\n      <div key={name} className=\"flex justify-between items-center p-2 bg-white rounded border\">\n        <div>\n          <span className=\"font-medium\">{name}</span>\n          <span className=\"text-sm text-gray-600 ml-2\">({data.dimensions})</span>\n        </div>\n        <div className=\"text-right\">\n          <div className=\"font-semibold text-blue-600\">\n            {data.count} planche{data.count > 1 ? 's' : ''}\n          </div>\n          <div className=\"text-sm text-gray-600\">\n            {data.count} × {data.price}€ = {(data.count * data.price).toFixed(2)}€\n          </div>\n        </div>\n      </div>\n    ));\n  };\n\n  // Generate shopping list as text table\n  const generateShoppingListText = (solution) => {\n    const summary = {};\n    solution.solution.forEach(item => {\n      const plankName = generatePlankName(item.plankType.width, item.plankType.height);\n      if (!summary[plankName]) {\n        summary[plankName] = { \n          count: 0, \n          price: item.plankType.price, \n          dimensions: `${item.plankType.width}×${item.plankType.height}mm` \n        };\n      }\n      summary[plankName].count++;\n    });\n\n    let tableText = \"Grande planche\\tQuantité\\tPU\\tPrix total\\n\";\n    tableText += \"-\\t-\\t-\\t-\\n\";\n    \n    let totalCost = 0;\n    Object.entries(summary).forEach(([name, data]) => {\n      const lineTotal = data.count * data.price;\n      totalCost += lineTotal;\n      tableText += `${name}\\t${data.count}\\t${data.price}€\\t${lineTotal.toFixed(2)}€\\n`;\n    });\n    \n    tableText += \"-\\t-\\t-\\t-\\n\";\n    tableText += `Total\\t\\t\\t${totalCost.toFixed(2)}€\\n`;\n    \n    return tableText;\n  };\n\n  // Copy shopping list to clipboard\n  const copyShoppingListToClipboard = () => {\n    if (!optimizationResults) return;\n    \n    const tableText = generateShoppingListText(optimizationResults);\n    \n    navigator.clipboard.writeText(tableText).then(() => {\n      // Show a temporary success message\n      const button = document.getElementById('copy-shopping-list-btn');\n      if (button) {\n        const originalText = button.innerHTML;\n        button.innerHTML = '<Copy className=\"w-4 h-4\" /> Copié !';\n        button.className = 'px-3 py-1 bg-green-600 text-white rounded text-sm hover:bg-green-700 flex items-center gap-1';\n        setTimeout(() => {\n          button.innerHTML = originalText;\n          button.className = 'px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700 flex items-center gap-1';\n        }, 2000);\n      }\n    }).catch(err => {\n      console.error('Erreur lors de la copie:', err);\n      alert('Erreur lors de la copie vers le presse-papiers');\n    });\n  };\n\n  // Generate plank visualization\n  const generatePlankVisualization = (item, index) => {\n    const plankType = item.plankType;\n    const arrangement = item.arrangement;\n    \n    // Calculate scale to maintain real proportions\n    const maxDisplayWidth = 400;\n    const maxDisplayHeight = 200;\n    const scaleX = maxDisplayWidth / plankType.width;\n    const scaleY = maxDisplayHeight / plankType.height;\n    const scale = Math.min(scaleX, scaleY);\n    \n    const displayWidth = plankType.width * scale;\n    const displayHeight = plankType.height * scale;\n    \n    const colors = ['bg-blue-300', 'bg-green-300', 'bg-red-300', 'bg-purple-300', 'bg-yellow-300', 'bg-pink-300', 'bg-indigo-300', 'bg-orange-300'];\n    \n    return (\n      <div key={index} className=\"border border-gray-300 p-4 bg-amber-50\">\n        <h4 className=\"font-semibold mb-2\">{generatePlankName(plankType.width, plankType.height)} - {plankType.price}€</h4>\n        <div className=\"flex justify-center\">\n          <div \n            className=\"relative border-2 border-amber-800 bg-amber-100\" \n            style={{ width: displayWidth, height: displayHeight }}\n          >\n            {arrangement.pieces.map((piece, pieceIndex) => {\n              const color = colors[piece.originalIndex % colors.length];\n              return (\n                <div \n                  key={pieceIndex}\n                  className={`absolute border border-gray-700 ${color} flex items-center justify-center text-xs font-bold shadow-sm`}\n                  style={{\n                    width: piece.displayWidth * scale,\n                    height: piece.displayHeight * scale,\n                    left: piece.x * scale,\n                    top: piece.y * scale\n                  }}\n                >\n                  <div className=\"text-center leading-tight\">\n                    <div className=\"font-bold\">{piece.name}</div>\n                    <div className=\"text-xs\">{piece.width}×{piece.height}</div>\n                    {piece.rotated && <div className=\"text-xs\">↻</div>}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"mt-2 text-sm text-gray-600 text-center\">\n          Pièces: {arrangement.pieces.length} | \n          Efficacité: {(arrangement.efficiency * 100).toFixed(1)}%\n        </div>\n        <div className=\"mt-1 text-xs text-gray-500 text-center\">\n          Dimensions: {plankType.width}×{plankType.height}mm | Échelle: 1:{Math.round(1/scale)}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6 bg-white min-h-screen\">\n      <div className=\"mb-6\">\n        <div className=\"flex items-center gap-4 mb-2\">\n          <a \n            href=\"/Sublimarches/optimiseur/contremarches/\" \n            className=\"flex items-center gap-2 text-blue-600 hover:text-blue-800 text-sm\"\n          >\n            <ArrowLeft className=\"w-4 h-4\" />\n            Retour à l'étape 2\n          </a>\n        </div>\n        <h1 className=\"text-3xl font-bold text-gray-800 mb-2 flex items-center gap-2\">\n          <Scissors className=\"text-blue-600\" />\n          Optimisation des Dessus de Marche\n        </h1>\n        <p className=\"text-gray-600\">\n          Étape 3/3 : Optimisez la découpe des dessus de marche sur les grandes planches\n        </p>\n      </div>\n\n      {/* File Upload Section */}\n      {!projectData && (\n        <div className=\"bg-blue-50 p-6 rounded-lg mb-6 text-center\">\n          <h3 className=\"font-semibold text-blue-800 mb-4 flex items-center gap-2\">\n            <Upload className=\"w-5 h-5\" />\n            Importer les mesures de l'étape 1\n          </h3>\n          <p className=\"text-gray-600 mb-4\">\n            Uploadez le fichier JSON exporté depuis l'étape 1 pour commencer l'optimisation\n          </p>\n          <button\n            onClick={() => setShowUploadModal(true)}\n            className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center gap-2 mx-auto\"\n          >\n            <Upload className=\"w-5 h-5\" />\n            Choisir un fichier JSON\n          </button>\n        </div>\n      )}\n\n      {/* Project Info */}\n      {projectData && (\n        <div className=\"bg-green-50 p-4 rounded-lg mb-6\">\n          <h3 className=\"font-semibold text-green-800 mb-3 flex items-center gap-2\">\n            <Package className=\"w-5 h-5\" />\n            Projet : {projectData.project.name}\n          </h3>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\n            <div>\n              <div className=\"text-2xl font-bold text-green-600\">{treads.length}</div>\n              <div className=\"text-sm text-gray-600\">Dessus de marche</div>\n            </div>\n            <div>\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {(treads.reduce((sum, t) => sum + (t.width * t.height), 0) / 1000000).toFixed(2)}\n              </div>\n              <div className=\"text-sm text-gray-600\">m² total</div>\n            </div>\n            <div>\n              <div className=\"text-2xl font-bold text-purple-600\">\n                {Math.max(...treads.map(t => t.width))}\n              </div>\n              <div className=\"text-sm text-gray-600\">Longueur max (mm)</div>\n            </div>\n            <div>\n              <div className=\"text-2xl font-bold text-orange-600\">\n                {Math.max(...treads.map(t => t.height))}\n              </div>\n              <div className=\"text-sm text-gray-600\">Largeur max (mm)</div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Configuration */}\n      {projectData && (\n        <div className=\"grid md:grid-cols-2 gap-6 mb-6\">\n          {/* General Parameters */}\n          <div className=\"bg-gray-50 p-4 rounded-lg\">\n            <h3 className=\"font-semibold text-gray-800 mb-3\">Paramètres généraux</h3>\n            <div className=\"space-y-3\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Largeur de scie (mm)\n                </label>\n                <input\n                  type=\"number\"\n                  value={sawThickness}\n                  onChange={(e) => setSawThickness(parseInt(e.target.value) || 10)}\n                  min=\"0\"\n                  max=\"50\"\n                  className=\"w-full p-2 border border-gray-300 rounded-md\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Large Planks */}\n          <div className=\"bg-blue-50 p-4 rounded-lg\">\n            <div className=\"flex justify-between items-center mb-3\">\n              <h3 className=\"font-semibold text-blue-800 flex items-center gap-2\">\n                <Package className=\"w-5 h-5\" />\n                Grandes planches disponibles\n              </h3>\n              <button\n                onClick={addNewPlank}\n                className=\"px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700 flex items-center gap-1\"\n              >\n                <Plus className=\"w-4 h-4\" />\n                Ajouter\n              </button>\n            </div>\n            \n            <div className=\"space-y-2\">\n              {largePlanks.map((plank) => (\n                <div key={plank.id} className=\"p-3 bg-white rounded border\">\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2 mb-2\">\n                    <div>\n                      <label className=\"block text-xs font-medium text-gray-700 mb-1\">Largeur (mm)</label>\n                      <input\n                        type=\"number\"\n                        value={plank.width}\n                        onChange={(e) => updatePlank(plank.id, 'width', parseInt(e.target.value) || 0)}\n                        className=\"w-full p-1 text-sm border border-gray-300 rounded\"\n                        min=\"1\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-xs font-medium text-gray-700 mb-1\">Hauteur (mm)</label>\n                      <input\n                        type=\"number\"\n                        value={plank.height}\n                        onChange={(e) => updatePlank(plank.id, 'height', parseInt(e.target.value) || 0)}\n                        className=\"w-full p-1 text-sm border border-gray-300 rounded\"\n                        min=\"1\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-xs font-medium text-gray-700 mb-1\">Prix (€)</label>\n                      <input\n                        type=\"number\"\n                        value={plank.price}\n                        onChange={(e) => updatePlank(plank.id, 'price', parseFloat(e.target.value) || 0)}\n                        className=\"w-full p-1 text-sm border border-gray-300 rounded\"\n                        min=\"0\"\n                        step=\"0.01\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-xs font-medium text-gray-700 mb-1\">Quantité max</label>\n                      <input\n                        type=\"number\"\n                        value={plank.maxQuantity || ''}\n                        onChange={(e) => updatePlank(plank.id, 'maxQuantity', e.target.value ? parseInt(e.target.value) : null)}\n                        className=\"w-full p-1 text-sm border border-gray-300 rounded\"\n                        min=\"1\"\n                        placeholder=\"Illimité\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"text-sm text-gray-600\">\n                      {generatePlankName(plank.width, plank.height)} - {plank.price}€\n                      {plank.maxQuantity ? ` (max: ${plank.maxQuantity})` : ' (illimité)'}\n                    </div>\n                    <button\n                      onClick={() => deletePlank(plank.id)}\n                      className=\"p-1 text-red-600 hover:bg-red-100 rounded\"\n                      title=\"Supprimer cette planche\"\n                    >\n                      <Trash2 className=\"w-4 h-4\" />\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Calculate Button */}\n      {projectData && (\n        <div className=\"text-center mb-6\">\n          <button\n            onClick={optimizeCutting}\n            disabled={isCalculating || treads.length === 0}\n            className=\"px-8 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2 mx-auto text-lg font-semibold\"\n          >\n            {isCalculating ? (\n              <>\n                <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white\"></div>\n                Calcul en cours...\n              </>\n            ) : (\n              <>\n                <Calculator className=\"w-5 h-5\" />\n                Calculer l'optimisation\n              </>\n            )}\n          </button>\n        </div>\n      )}\n\n      {/* Results */}\n      {optimizationResults && (\n        <div className=\"space-y-6\">\n          <div className=\"bg-green-100 p-4 rounded-lg\">\n            <h3 className=\"font-semibold text-green-800 mb-2 flex items-center gap-2\">\n              <Euro className=\"w-5 h-5\" />\n              Résultat de l'optimisation\n            </h3>\n            <div className=\"grid md:grid-cols-3 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {optimizationResults.totalCost.toFixed(2)}€\n                </div>\n                <div className=\"text-sm text-gray-600\">Coût total</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-blue-600\">\n                  {optimizationResults.totalPlanks}\n                </div>\n                <div className=\"text-sm text-gray-600\">Grandes planches</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-purple-600\">\n                  {treads.length - optimizationResults.remainingPieces.length}\n                </div>\n                <div className=\"text-sm text-gray-600\">Dessus de marche placés</div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-blue-50 p-4 rounded-lg\">\n            <div className=\"flex justify-between items-center mb-3\">\n              <h3 className=\"font-semibold text-blue-800 flex items-center gap-2\">\n                <Package className=\"w-5 h-5\" />\n                Récapitulatif des planches à commander\n              </h3>\n              <button\n                id=\"copy-shopping-list-btn\"\n                onClick={copyShoppingListToClipboard}\n                className=\"px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700 flex items-center gap-1\"\n                title=\"Copier la liste d'achat au format tableau\"\n              >\n                <Copy className=\"w-4 h-4\" />\n                Copier liste\n              </button>\n            </div>\n            <div className=\"space-y-2\">\n              {generatePlankSummary(optimizationResults)}\n              <div className=\"border-t pt-2 mt-3\">\n                <div className=\"flex justify-between items-center font-bold text-lg\">\n                  <span>Total à commander :</span>\n                  <span className=\"text-blue-600\">{optimizationResults.totalCost.toFixed(2)}€</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <h3 className=\"font-semibold text-gray-800 mb-4\">Plan de découpe détaillé</h3>\n            <div className=\"space-y-4\">\n              {optimizationResults.solution.map((item, index) => generatePlankVisualization(item, index))}\n            </div>\n          </div>\n\n          {optimizationResults.remainingPieces.length > 0 && (\n            <div className=\"bg-red-50 p-4 rounded-lg\">\n              <h3 className=\"font-semibold text-red-800 mb-2\">\n                Dessus de marche non placés ({optimizationResults.remainingPieces.length})\n              </h3>\n              <div className=\"text-sm text-red-600\">\n                {optimizationResults.remainingPieces.map(p => p.name).join(', ')}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Upload Modal */}\n      {showUploadModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg max-w-md w-full mx-4\">\n            <h3 className=\"text-lg font-semibold mb-4 text-blue-800\">\n              Importer les mesures\n            </h3>\n            \n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Fichier JSON de l'étape 1\n              </label>\n              <input\n                type=\"file\"\n                accept=\".json\"\n                onChange={handleFileUpload}\n                className=\"w-full p-2 border border-gray-300 rounded-md\"\n              />\n            </div>\n            \n            <div className=\"flex justify-end gap-2\">\n              <button\n                onClick={() => setShowUploadModal(false)}\n                className=\"px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-md flex items-center gap-2\"\n              >\n                <X className=\"w-4 h-4\" />\n                Annuler\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Instructions */}\n      <div className=\"mt-8 bg-blue-50 p-4 rounded-lg\">\n        <h4 className=\"font-semibold text-blue-800 mb-2\">📋 Instructions</h4>\n        <div className=\"text-sm text-blue-700 space-y-1\">\n          <p><strong>1.</strong> Importez le fichier JSON exporté depuis l'étape 1</p>\n          <p><strong>2.</strong> Ajustez les paramètres de scie et les grandes planches disponibles</p>\n          <p><strong>3.</strong> Lancez l'optimisation pour obtenir le plan de découpe optimal</p>\n          <p><strong>4.</strong> Visualisez les résultats et le coût total</p>\n        </div>\n        <div className=\"mt-3 text-xs text-blue-600\">\n          L'algorithme optimise pour le coût total en tenant compte de l'efficacité de découpe et des prix des planches. \n          Chaque dessus de marche utilise la plus grande longueur et largeur de la marche.\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TreadOptimizationApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}